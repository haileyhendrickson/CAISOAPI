Documentation/Log for the project

IMPORTANT RESOURCES:
https://www.caiso.com/documents/oasis-interfacespecification_v5_1_1clean_fall2017release.pdf PAGE 44 on doc has URL settings


5/20-
Started fiddling with the API query a little bit. Dive deeper into the queryname parameter- 
it somehow specifies the type of report. Do analysts ask for the same type of report every time? 
If the startdatetime and enddatetime have to specify a time, I will need to make an option of a "neutral" setting somehow (if statement)
Got a basic query structure formatted that runs.


5/21- 
Different versions- more current/updated software I think. Version 1 is fine.
figured out how to fix the parameter ordering issue! Pushed that and possibly deleted all my old pushes, oops 
Zoe requested that I focus on all of the pulls that are under the ENERGY category, especially all the LMPs
I think I have a pretty solid pull set up for now. Slightly tricky with switching between nodes and groups. (later learned no one asks for all nodes)
Finished the basic structure of my API program allowing for user input. It has issues for sure, but it isn't horrible. 


5/27-
(troubleshooting query bugs)
Set the default query time to 07:00 because that is what the website does (likely a timezone thing).
Figured out that the PRC_DS_REF report works fine the way I have it, with the market type parameter blank.
Figured out that different reports require different version numbers, fixed that.
Met with Zoe: got feedback on making code more efficient. Learned that people will never ask for all nodes- deleted that part of the code.
also learned that people don't know what type of report they want, they know the interval-market type. Slightly different.
Restructred my 'map' to be searched by interval and market type. (More user friendly)


5/28-
Finished the bones of the beginning to end API call: from inputting start dates to a combined file for all dates (mostly just fixed the query limit issue)
Figured out new way to call queryname using market and interval. The only issue is that there are a couple of duplicate report types. Not sure what the difference is or if they are necessary


5/30-
As I understand, nodes are individual points that have some sort of flow/transfer of energy through them (like from a plant or to a house)
apnodes are aggregates of a group of nodes, and SPTie nodes are ones that connect with the grid not in CAISO boundaries
Fixed pulling reference price data. needed a slightly different set of parameters

Qs for Zoe (eventually):
    - will I need to create dropdowns of lists of available nodes? That might pose an issue- different for each report type


6/2-
Added time.cleep(10) to try and avoid query limits, and it seems to have solved my issue of random chunks not pulling
Also added a separate cleaning portion for reference prices.
Getting lost down a rabbit hole about PRC_CD_INTL_LMP. As far as I understand, the contingency dispatch shows prices for generation needed
last minute after a change in load demand (like when a generator falls offline). My hypothesis was that those prices would be missing
from the regular LMP report, or that the contingency prices would be much higher. However, I can't seem to figure out any sory of correlation.
Managed to correctly pull a mostly clean version of each type of report! Woop woop!

Next steps: talk to Jacob and Zoe about best methods for a gui (streamlit vs tkinter). ask about security issues?

Rules/Notes for Pulling Reports:
- PRC_LMP 
    pulls great!
- PRC_SPTIE_LMP
    pulls great! MUST use SPTIE nodes (slightly different)
- PRC_INTVL_LMP 
    pulls great! It's just really slow because of the large amount of data from smaller intervals
- PRC_HASP_LMP
    pulls great! 
- PRC_RTPD_LMP
    pulls great! 
- PRC_DS_REF 
    pulls great! has a separate cleaning code section. Leave market section blank. use reference nodes (might be the same)
- PRC_CD_INTVL_LMP
    pulls great! had to pass files without data
- PRC_CD_SPTIE_LMP
    pulls great! had to pass files without data
- PRC_RTM_LAP (Load Aggregated Point)
    pull great! Use the right nodes though. (RTM_LAP, might be apnodes, might be sptie, or something else)


6/3-
Started working on tkinter today! I figured I would start with this and then if we decide later that streamlit 
is better I can change it.
Got a full run through using DAM/60 and the SPTIE filter. It took most of the day. Will need to test the other 
files and figure out how to automatically save the file.

Fun app:
- make sure SPTIE works with checkbox
- user inputs aren't working correctly
- make fun app pretty and useable (much nicer)

Basic tkinter:
- chat with zoey about how to make it so people just open it up and it downloads in the background or smthn


6/4-
Zoe told me that no one uses the contingency dispatch reports, so I can delete them if I want. I might leave it 
bc at this point there is too much to delete with that without risking deleting other important stuff
Tested and confirmed: PRC_LMP, PRC_SPTIE_LMP, PRC_SPTIE_LMP, PRC_HASP_LMP, PRC_RTPD_LMP, PRC_DS_REF, PRC_CD_INTVL_LMP, PRC_RTM_LAP
Issues: PRC_CD_SPTIE_LMP (techically runs, but there isn't data to pull?) 
Fixed bugs related to SPTIE and make it so that you can run multiple reports without closing the window. hype.

test nodes: C7-1-S1_1_N002 , 0096WD_7_N001
sptie nodes: AMARGOSA_1_SN001
reference prices: BELRIDGE_1_N001
RTM_LAP: CLAP_AEPCO-APND